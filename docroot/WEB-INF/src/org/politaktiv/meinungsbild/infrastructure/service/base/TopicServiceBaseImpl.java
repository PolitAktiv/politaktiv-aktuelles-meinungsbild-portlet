/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 *        
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.politaktiv.meinungsbild.infrastructure.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.base.PrincipalBean;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;

import org.politaktiv.meinungsbild.infrastructure.model.Topic;
import org.politaktiv.meinungsbild.infrastructure.service.RatingLocalService;
import org.politaktiv.meinungsbild.infrastructure.service.RatingService;
import org.politaktiv.meinungsbild.infrastructure.service.SubtopicLocalService;
import org.politaktiv.meinungsbild.infrastructure.service.SubtopicService;
import org.politaktiv.meinungsbild.infrastructure.service.TopicLocalService;
import org.politaktiv.meinungsbild.infrastructure.service.TopicService;
import org.politaktiv.meinungsbild.infrastructure.service.persistence.RatingPersistence;
import org.politaktiv.meinungsbild.infrastructure.service.persistence.SubtopicPersistence;
import org.politaktiv.meinungsbild.infrastructure.service.persistence.TopicPersistence;

import javax.sql.DataSource;

/**
 * The base implementation of the topic remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link org.politaktiv.meinungsbild.infrastructure.service.impl.TopicServiceImpl}.
 * </p>
 *
 * @author politaktiv
 * @see org.politaktiv.meinungsbild.infrastructure.service.impl.TopicServiceImpl
 * @see org.politaktiv.meinungsbild.infrastructure.service.TopicServiceUtil
 * @generated
 */
public abstract class TopicServiceBaseImpl extends PrincipalBean
	implements TopicService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link org.politaktiv.meinungsbild.infrastructure.service.TopicServiceUtil} to access the topic remote service.
	 */

	/**
	 * Returns the rating local service.
	 *
	 * @return the rating local service
	 */
	public RatingLocalService getRatingLocalService() {
		return ratingLocalService;
	}

	/**
	 * Sets the rating local service.
	 *
	 * @param ratingLocalService the rating local service
	 */
	public void setRatingLocalService(RatingLocalService ratingLocalService) {
		this.ratingLocalService = ratingLocalService;
	}

	/**
	 * Returns the rating remote service.
	 *
	 * @return the rating remote service
	 */
	public RatingService getRatingService() {
		return ratingService;
	}

	/**
	 * Sets the rating remote service.
	 *
	 * @param ratingService the rating remote service
	 */
	public void setRatingService(RatingService ratingService) {
		this.ratingService = ratingService;
	}

	/**
	 * Returns the rating persistence.
	 *
	 * @return the rating persistence
	 */
	public RatingPersistence getRatingPersistence() {
		return ratingPersistence;
	}

	/**
	 * Sets the rating persistence.
	 *
	 * @param ratingPersistence the rating persistence
	 */
	public void setRatingPersistence(RatingPersistence ratingPersistence) {
		this.ratingPersistence = ratingPersistence;
	}

	/**
	 * Returns the subtopic local service.
	 *
	 * @return the subtopic local service
	 */
	public SubtopicLocalService getSubtopicLocalService() {
		return subtopicLocalService;
	}

	/**
	 * Sets the subtopic local service.
	 *
	 * @param subtopicLocalService the subtopic local service
	 */
	public void setSubtopicLocalService(
		SubtopicLocalService subtopicLocalService) {
		this.subtopicLocalService = subtopicLocalService;
	}

	/**
	 * Returns the subtopic remote service.
	 *
	 * @return the subtopic remote service
	 */
	public SubtopicService getSubtopicService() {
		return subtopicService;
	}

	/**
	 * Sets the subtopic remote service.
	 *
	 * @param subtopicService the subtopic remote service
	 */
	public void setSubtopicService(SubtopicService subtopicService) {
		this.subtopicService = subtopicService;
	}

	/**
	 * Returns the subtopic persistence.
	 *
	 * @return the subtopic persistence
	 */
	public SubtopicPersistence getSubtopicPersistence() {
		return subtopicPersistence;
	}

	/**
	 * Sets the subtopic persistence.
	 *
	 * @param subtopicPersistence the subtopic persistence
	 */
	public void setSubtopicPersistence(SubtopicPersistence subtopicPersistence) {
		this.subtopicPersistence = subtopicPersistence;
	}

	/**
	 * Returns the topic local service.
	 *
	 * @return the topic local service
	 */
	public TopicLocalService getTopicLocalService() {
		return topicLocalService;
	}

	/**
	 * Sets the topic local service.
	 *
	 * @param topicLocalService the topic local service
	 */
	public void setTopicLocalService(TopicLocalService topicLocalService) {
		this.topicLocalService = topicLocalService;
	}

	/**
	 * Returns the topic remote service.
	 *
	 * @return the topic remote service
	 */
	public TopicService getTopicService() {
		return topicService;
	}

	/**
	 * Sets the topic remote service.
	 *
	 * @param topicService the topic remote service
	 */
	public void setTopicService(TopicService topicService) {
		this.topicService = topicService;
	}

	/**
	 * Returns the topic persistence.
	 *
	 * @return the topic persistence
	 */
	public TopicPersistence getTopicPersistence() {
		return topicPersistence;
	}

	/**
	 * Sets the topic persistence.
	 *
	 * @param topicPersistence the topic persistence
	 */
	public void setTopicPersistence(TopicPersistence topicPersistence) {
		this.topicPersistence = topicPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Returns the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	protected Class<?> getModelClass() {
		return Topic.class;
	}

	protected String getModelClassName() {
		return Topic.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = topicPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = RatingLocalService.class)
	protected RatingLocalService ratingLocalService;
	@BeanReference(type = RatingService.class)
	protected RatingService ratingService;
	@BeanReference(type = RatingPersistence.class)
	protected RatingPersistence ratingPersistence;
	@BeanReference(type = SubtopicLocalService.class)
	protected SubtopicLocalService subtopicLocalService;
	@BeanReference(type = SubtopicService.class)
	protected SubtopicService subtopicService;
	@BeanReference(type = SubtopicPersistence.class)
	protected SubtopicPersistence subtopicPersistence;
	@BeanReference(type = TopicLocalService.class)
	protected TopicLocalService topicLocalService;
	@BeanReference(type = TopicService.class)
	protected TopicService topicService;
	@BeanReference(type = TopicPersistence.class)
	protected TopicPersistence topicPersistence;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
}